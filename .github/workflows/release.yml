name: ci

on:
  push:
    tags:
      - "[0-9]+.[0-9]+"

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - name: Install libinklevel
        run: sudo apt-get install libinklevel5
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev --deploy
      - name: Run tests
        run: |
          pipenv run pytest test/
          pipenv run ./dist.py
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get Name of Artifact
        run: |
          ARTIFACT_PATHNAME=$(ls dist/*.mkp | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          echo ::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}
          echo ::set-env name=ARTIFACT_PATHNAME::${ARTIFACT_PATHNAME}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ env.ARTIFACT_PATHNAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/binary